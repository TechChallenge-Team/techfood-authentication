on:
  push:
    branches:
      - main
      - 'feature/*'
  workflow_dispatch: {}

env:
  AWS_REGION: us-east-1
  
jobs:
  build-and-deploy-lambda:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Restore dependencies
        run: dotnet restore src/TechFood.Authentication/TechFood.Authentication.csproj

      - name: Build project
        run: dotnet build --configuration Release src/TechFood.Authentication/TechFood.Authentication.csproj

      - name: Install Amazon Lambda Tools
        run: dotnet tool install -g Amazon.Lambda.Tools

      - name: Publish Lambda package
        run: dotnet lambda package --configuration Release --project-location src/TechFood.Authentication/TechFood.Authentication.csproj --output-package bin/Release/TechFood.Authentication.zip

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_TESTE_LEO }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_TESTE_LEO }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN_TESTE_LEO }}
          aws-region: ${{ env.AWS_REGION }}

      # Using hardcoded values defined in env (AUTH_*) above. Replace them with
      # the real values for your AWS Academy environment before running.

      - name: Upload package to S3 (bucket from secrets)
        run: |
          BUCKET=${{ secrets.AUTH_BUCKET }}
          KEY="techfood/auth/TechFood.Authentication.zip"
          echo "Uploading to s3://$BUCKET/$KEY"
          aws s3 cp bin/Release/TechFood.Authentication.zip s3://$BUCKET/$KEY

      - name: Update Lambda function code (or create if not exists)
        run: |
          FUNC_NAME=${{ secrets.AUTH_FUNCTION_NAME }}
          BUCKET=${{ secrets.AUTH_BUCKET }}
          KEY="techfood/auth/TechFood.Authentication.zip"

          echo "Updating function code for $FUNC_NAME"
          set -e
          if aws lambda get-function --function-name "$FUNC_NAME" > /dev/null 2>&1; then
            aws lambda update-function-code --function-name "$FUNC_NAME" --s3-bucket "$BUCKET" --s3-key "$KEY" --publish
          else
            echo "Function $FUNC_NAME does not exist, attempting create via dotnet lambda deploy-function"
            dotnet lambda deploy-function $FUNC_NAME --region ${{ env.AWS_REGION }} --package bin/Release/TechFood.Authentication.zip || (echo "Failed to create function"; exit 1)
          fi

      - name: Deployment summary
        run: |
          echo "Lambda function: ${{ secrets.AUTH_FUNCTION_NAME }}"
          echo "Lambda ARN: ${{ secrets.AUTH_FUNCTION_ARN }}"
          echo "API URL: ${{ secrets.AUTH_API_URL }}"
